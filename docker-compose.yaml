version: "3"
services:
  client:
    build: react-client
    ports:
      - "3000:80"
    depends_on:
      - rest

  rest:
    build: KotlinRest
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      - KAFKA_SERVER=${KAFKA_INTERNAL_SERVER}
      - SPRING_DATA_MONGODB_URI=${MONGO_URI}
      - TRANSFERAPP_URL=${TRANSFERAPP_URL}
    depends_on:
      - kafka

  zookeeper:
    image: "bitnami/zookeeper:3.7.0"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '2181:2181'
  kafka:
    image: "bitnami/kafka:3.0.0"
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://${KAFKA_INTERNAL_SERVER},EXTERNAL://${KAFKA_SERVER}
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=${ZOOKEEPER_SERVER}
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    healthcheck:
      test: [ "CMD", "/opt/bitnami/kafka/bin/kafka-topics.sh", "--zookeeper", "${ZOOKEEPER_SERVER}", "--list" ]
      interval: 10s
      timeout: 2s
      retries: 15

    depends_on:
      - zookeeper

  mongo:
    image: "mongo"
    ports:
      - "27017:27017"
    volumes:
      - ./data:/data/db

  transfer_app:
    build: transfer_app
    ports:
      - "5000:5000"
    environment:
      - BOOTSTRAP_SERVERS=${KAFKA_INTERNAL_SERVER}
      - MONGO_HOST=${MONGO_HOSTNAME}
      - MONGO_PORT=${MONGO_PORT}
    depends_on:
      - rest
      - mongo
      - kafka
